name: Deploy to Production

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build project
        run: npm run build

      - name: Upload build artifacts
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          source: "dist/,scripts/,db/,src/,package*.json,ecosystem.config.cjs,nginx.conf,vite.config.js"
          target: "/home/${{ secrets.SERVER_USER }}/deploy/murphys-laws/"
          overwrite: true

      - name: Deploy and restart services
        uses: appleboy/ssh-action@v1.0.0
        env:
          GITHUB_SHA: ${{ github.sha }}
          GITHUB_ACTOR: ${{ github.actor }}
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          envs: GITHUB_SHA,GITHUB_ACTOR
          script: |
            STAGING_DIR="$HOME/deploy/murphys-laws"
            TARGET_DIR="/root/murphys-laws"

            sudo install -d -m 755 "$STAGING_DIR"
            sudo install -d -m 755 "$TARGET_DIR"

            sudo install -d -m 755 "$TARGET_DIR/dist"
            sudo install -d -m 755 "$TARGET_DIR/scripts"
            sudo install -d -m 755 "$TARGET_DIR/db"
            sudo install -d -m 755 "$TARGET_DIR/src"
            sudo install -d -m 755 "$TARGET_DIR/logs"

            sudo rsync -a --delete "$STAGING_DIR/dist/" "$TARGET_DIR/dist/"
            sudo rsync -a --delete "$STAGING_DIR/scripts/" "$TARGET_DIR/scripts/"
            sudo rsync -a --delete "$STAGING_DIR/db/" "$TARGET_DIR/db/"
            sudo rsync -a --delete "$STAGING_DIR/src/" "$TARGET_DIR/src/"

            sudo install -m 644 "$STAGING_DIR/ecosystem.config.cjs" "$TARGET_DIR/ecosystem.config.cjs"
            sudo install -m 644 "$STAGING_DIR/nginx.conf" "$TARGET_DIR/nginx.conf"
            sudo install -m 644 "$STAGING_DIR/package.json" "$TARGET_DIR/package.json"
            sudo install -m 644 "$STAGING_DIR/package-lock.json" "$TARGET_DIR/package-lock.json"
            sudo install -m 644 "$STAGING_DIR/vite.config.js" "$TARGET_DIR/vite.config.js"

            sudo chown -R root:root "$TARGET_DIR"

            sudo --preserve-env=GITHUB_SHA,GITHUB_ACTOR bash <<'INNER'
            set -e

            TARGET_DIR="/root/murphys-laws"

            # Load nvm and use Node v22
            export NVM_DIR="/root/.nvm"
            [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"
            nvm use 22

            cd "$TARGET_DIR"

            # Backup production database before migrations
            cp murphys.db murphys.db.backup 2>/dev/null || true

            # Create .env file with secrets
            cat > .env << EOF
            HOST=127.0.0.1
            PORT=8787
            SMTP_HOST=${{ secrets.SMTP_HOST }}
            SMTP_PORT=${{ secrets.SMTP_PORT }}
            SMTP_USER=${{ secrets.SMTP_USER }}
            SMTP_PASS=${{ secrets.SMTP_PASS }}
            EMAIL_FROM=${{ secrets.EMAIL_FROM }}
            EOF

            echo "📄 Contents of $TARGET_DIR:" 
            ls -la

            if [ ! -f package.json ]; then
              echo "❌ package.json missing in $TARGET_DIR" >&2
              exit 1
            fi

            # Run migrations using staged migrations
            npm install
            npm run migrate:safe

            # Update server maintenance scripts
            sudo cp "$TARGET_DIR/scripts/daily-report.sh" /usr/local/bin/daily-report.sh
            sudo chmod +x /usr/local/bin/daily-report.sh

            # Restart services
            pm2 restart ecosystem.config.cjs || pm2 start ecosystem.config.cjs
            pm2 save
            INNER
