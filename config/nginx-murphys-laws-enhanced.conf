# Enhanced Nginx Configuration for Murphy's Laws
# Location: /etc/nginx/sites-available/murphys-laws

server {
    server_name murphys-laws.com www.murphys-laws.com;

    # Security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Permissions-Policy "geolocation=(), microphone=(), camera=()" always;
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;

    # Content Security Policy (adjust as needed for your app)
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://www.googletagmanager.com https://www.google-analytics.com https://cdn.jsdelivr.net; style-src 'self' 'unsafe-inline' https://fonts.googleapis.com; font-src 'self' https://fonts.gstatic.com; img-src 'self' data: https:; connect-src 'self' https://www.google-analytics.com; frame-ancestors 'self'; base-uri 'self'; form-action 'self';" always;

    # Hide nginx version
    server_tokens off;

    # Limit concurrent connections per IP
    limit_conn conn_limit 10;

    # Frontend - general rate limiting
    location / {
        # Apply general rate limit
        limit_req zone=app_limit burst=20 nodelay;

        proxy_pass http://127.0.0.1:5175;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;

        # Timeouts
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;

        # Buffer settings
        proxy_buffering off;
    }

    # API endpoints - stricter rate limiting
    location /api {
        # Apply API rate limit
        limit_req zone=api_limit burst=10 nodelay;

        proxy_pass http://127.0.0.1:8787;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # Timeouts for API
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;

        # Body size for API requests
        client_max_body_size 10M;
    }

    # Calculator endpoints - prevent abuse
    location ~* ^/(sods-calculator|buttered-toast-calculator) {
        # Apply calculator rate limit
        limit_req zone=calculator_limit burst=5 nodelay;

        proxy_pass http://127.0.0.1:5175;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Static files - no rate limiting needed
    location ~* \.(jpg|jpeg|png|gif|ico|css|js|svg|woff|woff2|ttf|eot)$ {
        proxy_pass http://127.0.0.1:5175;
        expires 1y;
        add_header Cache-Control "public, immutable";
        access_log off;
    }

    # Health check endpoint - no rate limiting
    location = /api/health {
        limit_req off;
        limit_conn off;

        proxy_pass http://127.0.0.1:8787;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        access_log off;
    }

    # Block access to sensitive files
    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
    }

    location ~ ~$ {
        deny all;
        access_log off;
        log_not_found off;
    }

    # SSL configuration
    listen 443 ssl http2;
    ssl_certificate /etc/letsencrypt/live/murphys-laws.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/murphys-laws.com/privkey.pem;
    include /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

    # Enable HTTP/2 server push (optional, for performance)
    http2_push_preload on;

    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_types text/plain text/css text/xml text/javascript application/x-javascript application/xml+rss application/json application/javascript;
}

# HTTP to HTTPS redirect
server {
    listen 80;
    server_name murphys-laws.com www.murphys-laws.com;

    # Redirect all HTTP to HTTPS
    return 301 https://$host$request_uri;
}

# WWW to non-WWW redirect (optional, for consistency)
server {
    listen 443 ssl http2;
    server_name www.murphys-laws.com;

    ssl_certificate /etc/letsencrypt/live/murphys-laws.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/murphys-laws.com/privkey.pem;

    # Redirect WWW to non-WWW
    return 301 https://murphys-laws.com$request_uri;
}
